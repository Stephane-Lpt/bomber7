# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for full commit history analysis

    # Build with Java 8
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Build with Gradle
      run: ./gradlew build

    # SonarQube requires Java 11+ for scanner
    - name: Set up JDK 17 (for SonarScanner)
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: SonarQube Scan
      run: |
        ./gradlew sonarqube \
          -Dsonar.projectKey=your_project_key \
          -Dsonar.java.binaries=build/classes/java/main \
          -Dsonar.java.source=8
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Run Checkstyle
      if: always() # Run always checkstyle
      run: ./gradlew checkstyleMain checkstyleTest

    - name: Upload Checkstyle report as artifact
      if: always() # Even if the checkstyle fail
      uses: actions/upload-artifact@v4
      with:
        name: checkstyle-report
        path: |
          **/build/reports/checkstyle/*.html

    - name: Generate Javadoc
      run: ./gradlew javadoc

    - name: Debug Javadoc output
      run: |
        echo "Contenu de ./build/docs :"
        ls -R ./build/docs || echo "Aucun fichier trouvÃ©"
        echo "Contenu global :"
        find . -name javadoc

    - name: Deploy JavaDoc ðŸš€
      if: github.ref == 'refs/heads/main'
      uses: MathieuSoysal/Javadoc-publisher.yml@v3.0.2
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        javadoc-branch: javadoc
        java-version: 8
        target-folder: .
        project: gradle
        javadoc-source-folder: core/build/docs/javadoc

    - name: Run tests
      if: always() # Always run tests
      run: ./gradlew test

    - name: Upload JUnit test report
      if: always() # Upload junit report even if the tests fail
      uses: actions/upload-artifact@v4
      with:
        name: junit-test-report
        path: core/build/reports/tests/test

    - name: Render JUnit Report in GitHub UI
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: JUnit Tests
        path: core/build/test-results/test/TEST-*.xml
        reporter: java-junit


    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
